#This is an optional tag. This will be the workflow name appearing on the Actions tab of your git repo
name: workflow

#Specifies the trigger for this workflow. This workflow will be triggered on push event, 
#that is every time someone pushes a change to the repository or merges a pull request. 
#This is triggered by a push to every branch; for examples of syntax that runs only on 
#pushes to specific branches, paths, or tags, see "Workflow syntax for GitHub Actions."
on: push

#Groups together all the jobs that run in the Demo Workflow workflow.
jobs:
  #Defines a job named build. The child keys will define properties of the job.
  build:
    #Configures the job to run on the latest version of an Ubuntu Linux runner.
    runs-on: ubuntu-18.04	

    env:
      DB_DATABASE: spm_project
      DB_USER: root
      DB_PASSWORD: root
      SQLALCHEMY_DATABASE_URI: true

    #Groups together all the steps that run in the check-bats-version job. 
    #Each item nested under this section is a separate action or shell script.
    steps:
      #The uses keyword specifies that this step will run v3 of the actions/checkout action. 
      #This is an action that checks out your repository onto the runner, 
      #allowing you to run scripts or other actions against your code (such as build and test tools). 
      #You should use the checkout action any time your workflow will run against the repository's code.
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        #This step uses the actions/setup-python@v4 action to install the 
        #specified version of the python (this example uses v3.x which is the latest minor version in 3.x series). 
        #This puts both the python commands in your PATH.
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        #The run keyword tells the job to execute a command on the runner.
        #installs pip and flake 8 also if requirements.txt is present then installs all the dependencies specified there
        run: |
          python -m pip install --upgrade pip
          pip install mysql-connector-python==8.0.27
          pip install -r requirements.txt

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"




      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Load tables into spm_project database
        run: |
          mysql --user="root" --database="spm_project" --password="root" < "./backend/spm_project_dataLoaded-3.sql"

      
      - name: Check that app.py can build, and build on another screen and detach
        run: |
          screen -dmS myserver python backend/app.py          

      # - name: Test with unittest
      #   #runs the unittest
      #   run: |
      #     #TODO: Add the command to run all the unittest here.
      #     python backend/ljps_unit_test.py
      #     #python integration_tests.py



        